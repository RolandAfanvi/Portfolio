"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./data/Projects.js":
/*!**************************!*\
  !*** ./data/Projects.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   projects: function() { return /* binding */ projects; }\n/* harmony export */ });\nconst projects = [\n    {\n        \"_id\": 1,\n        \"name\": \"Jeu Memory\",\n        \"description\": \"L’objectif de ce projet est de r\\xe9aliser une application qui simule un jeu de memory. Le jeu de memory se joue avec un ensemble de paires de cartes dispos\\xe9es sur un plateau de jeu. Chaque paire de cartes repr\\xe9sente le m\\xeame personnage. Les paires de cartes de personnages sont dispos\\xe9es sur le plateau faces cach\\xe9es. Le jeu se d\\xe9roule avec au moins deux joueurs. Les joueurs retournent deux cartes du plateau \\xe0 tour de r\\xf4le. Lorsque les deux cartes retourn\\xe9es repr\\xe9sentent le m\\xeame personnage, elles restent apparentes et le joueur continue de jouer en retournant deux autres cartes. Dans le cas contraire les deux cartes se retournent automatiquement au bout d’un court laps de temps et le joueur passe la main au joueur suivant. Le but du jeu est de trouver le plus grand nombre de paires de cartes repr\\xe9sentant les m\\xeames personnages.\",\n        \"image\": \"memory.png\",\n        \"links:\": {\n            \"github\": \"https://github.com/RolandAfanvi/Jeu-Memory\"\n        },\n        \"skills\": [\n            \"Netbeans\",\n            \"Java\",\n            \"Github\"\n        ]\n    },\n    {\n        \"_id\": 2,\n        \"name\": \"Bowling Game\",\n        \"description\": \"L’objectif du travail est de r\\xe9aliser une interface web qui simule un jeu de bowling. Une version augment\\xe9e, avec diff\\xe9rentes fonctionnalit\\xe9s est propos\\xe9e dans le cadre de ce projet. (Projet Scolaire).\",\n        \"image\": \"bowling.png\",\n        \"links\": {\n            \"github\": \"https://github.com/RolandAfanvi/Bowling_Game\"\n        },\n        \"skills\": [\n            \"JavaScript\",\n            \"Html\",\n            \"CSS\",\n            \"THREEjs\"\n        ]\n    },\n    {\n        \"_id\": 3,\n        \"name\": \"EasySave\",\n        \"description\": \"EasySave est une application de sauvegarde polyvalente d\\xe9velopp\\xe9e en C# avec des interfaces console et WPF. Il permet aux utilisateurs de cr\\xe9er et d'ex\\xe9cuter des sauvegardes, en copiant des fichiers d'un r\\xe9pertoire source vers un r\\xe9pertoire cible. L'application a \\xe9volu\\xe9 \\xe0 travers diff\\xe9rentes versions, chacune introduisant de nouvelles fonctionnalit\\xe9s et am\\xe9liorations.\",\n        \"image\": \"EasySave.png\",\n        \"links\": {\n            \"github\": \"https://github.com/Arkcoz/EasySave\"\n        },\n        \"skills\": [\n            \"C#\",\n            \"WPF\",\n            ,\n            \".NetCore\"\n        ]\n    },\n    {\n        \"_id\": 4,\n        \"name\": \"Portfolio\",\n        \"description\": \"Ce projet est le portfolio que vous \\xeates en train de consulter. Il a pour but de me pr\\xe9senter moi ainsi que mon parcours professionnel. C’\\xe9tait \\xe9galement l’occasion pour moi d’apprendre de nouvelles technologies comme NextJS ou encore Framer motion. \",\n        \"image\": \"portfolio.png\",\n        \"links\": {\n            \"github\": \"https://github.com/RolandAfanvi/Portfolio\",\n            \"website\": \"https://portfolio-8jh189dke-rolandafanvis-projects.vercel.app/\"\n        },\n        \"skills\": [\n            \"NextJS\",\n            \"Tailwindcss\",\n            \"Framer Motion\",\n            \"Docker\"\n        ]\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kYXRhL1Byb2plY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxXQUFXO0lBQ3BCO1FBQ0ksT0FBTztRQUNQLFFBQVE7UUFDUixlQUFlO1FBQ2YsU0FBUztRQUNULFVBQVU7WUFDTixVQUFVO1FBQ2Q7UUFDQSxVQUFVO1lBQUM7WUFBWTtZQUFRO1NBQVM7SUFDNUM7SUFDQTtRQUNJLE9BQU87UUFDUCxRQUFRO1FBRVIsZUFBZTtRQUNmLFNBQVM7UUFDVCxTQUFTO1lBQ0wsVUFBVTtRQUNkO1FBQ0EsVUFBVTtZQUFDO1lBQWM7WUFBUTtZQUFPO1NBQVU7SUFDdEQ7SUFDQTtRQUNJLE9BQU87UUFDUCxRQUFRO1FBQ1IsZUFBZTtRQUNmLFNBQVM7UUFDVCxTQUFTO1lBQ0wsVUFBVTtRQUNkO1FBQ0EsVUFBVTtZQUFDO1lBQU07O1lBQVE7U0FBVztJQUN4QztJQUNBO1FBQ0ksT0FBTztRQUNQLFFBQVE7UUFDUixlQUFlO1FBQ2YsU0FBUztRQUNULFNBQVM7WUFDTCxVQUFVO1lBQ1YsV0FBVztRQUNmO1FBQ0EsVUFBVTtZQUFDO1lBQVU7WUFBZTtZQUFpQjtTQUFTO0lBQ2xFO0NBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZGF0YS9Qcm9qZWN0cy5qcz9jNTljIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwcm9qZWN0cyA9IFtcbiAgICB7XG4gICAgICAgIFwiX2lkXCI6IDEsXG4gICAgICAgIFwibmFtZVwiOiBcIkpldSBNZW1vcnlcIixcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkzigJlvYmplY3RpZiBkZSBjZSBwcm9qZXQgZXN0IGRlIHLDqWFsaXNlciB1bmUgYXBwbGljYXRpb24gcXVpIHNpbXVsZSB1biBqZXUgZGUgbWVtb3J5LiBMZSBqZXUgZGUgbWVtb3J5IHNlIGpvdWUgYXZlYyB1biBlbnNlbWJsZSBkZSBwYWlyZXMgZGUgY2FydGVzIGRpc3Bvc8OpZXMgc3VyIHVuIHBsYXRlYXUgZGUgamV1LiBDaGFxdWUgcGFpcmUgZGUgY2FydGVzIHJlcHLDqXNlbnRlIGxlIG3Dqm1lIHBlcnNvbm5hZ2UuIExlcyBwYWlyZXMgZGUgY2FydGVzIGRlIHBlcnNvbm5hZ2VzIHNvbnQgZGlzcG9zw6llcyBzdXIgbGUgcGxhdGVhdSBmYWNlcyBjYWNow6llcy4gTGUgamV1IHNlIGTDqXJvdWxlIGF2ZWMgYXUgbW9pbnMgZGV1eCBqb3VldXJzLiBMZXMgam91ZXVycyByZXRvdXJuZW50IGRldXggY2FydGVzIGR1IHBsYXRlYXUgw6AgdG91ciBkZSByw7RsZS4gTG9yc3F1ZSBsZXMgZGV1eCBjYXJ0ZXMgcmV0b3VybsOpZXMgcmVwcsOpc2VudGVudCBsZSBtw6ptZSBwZXJzb25uYWdlLCBlbGxlcyByZXN0ZW50IGFwcGFyZW50ZXMgZXQgbGUgam91ZXVyIGNvbnRpbnVlIGRlIGpvdWVyIGVuIHJldG91cm5hbnQgZGV1eCBhdXRyZXMgY2FydGVzLiBEYW5zIGxlIGNhcyBjb250cmFpcmUgbGVzIGRldXggY2FydGVzIHNlIHJldG91cm5lbnQgYXV0b21hdGlxdWVtZW50IGF1IGJvdXQgZOKAmXVuIGNvdXJ0IGxhcHMgZGUgdGVtcHMgZXQgbGUgam91ZXVyIHBhc3NlIGxhIG1haW4gYXUgam91ZXVyIHN1aXZhbnQuIExlIGJ1dCBkdSBqZXUgZXN0IGRlIHRyb3V2ZXIgbGUgcGx1cyBncmFuZCBub21icmUgZGUgcGFpcmVzIGRlIGNhcnRlcyByZXByw6lzZW50YW50IGxlcyBtw6ptZXMgcGVyc29ubmFnZXMuXCIsXG4gICAgICAgIFwiaW1hZ2VcIjogXCJtZW1vcnkucG5nXCIsXG4gICAgICAgIFwibGlua3M6XCI6IHtcbiAgICAgICAgICAgIFwiZ2l0aHViXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1JvbGFuZEFmYW52aS9KZXUtTWVtb3J5XCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJza2lsbHNcIjogW1wiTmV0YmVhbnNcIiwgXCJKYXZhXCIsIFwiR2l0aHViXCJdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIFwiX2lkXCI6IDIsXG4gICAgICAgIFwibmFtZVwiOiBcIkJvd2xpbmcgR2FtZVwiLFxuICAgICAgICBcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkzigJlvYmplY3RpZiBkdSB0cmF2YWlsIGVzdCBkZSByw6lhbGlzZXIgdW5lIGludGVyZmFjZSB3ZWIgcXVpIHNpbXVsZSB1biBqZXUgZGUgYm93bGluZy4gVW5lIHZlcnNpb24gYXVnbWVudMOpZSwgYXZlYyBkaWZmw6lyZW50ZXMgZm9uY3Rpb25uYWxpdMOpcyBlc3QgcHJvcG9zw6llIGRhbnMgbGUgY2FkcmUgZGUgY2UgcHJvamV0LiAoUHJvamV0IFNjb2xhaXJlKS5cIixcbiAgICAgICAgXCJpbWFnZVwiOiBcImJvd2xpbmcucG5nXCIsXG4gICAgICAgIFwibGlua3NcIjoge1xuICAgICAgICAgICAgXCJnaXRodWJcIjogXCJodHRwczovL2dpdGh1Yi5jb20vUm9sYW5kQWZhbnZpL0Jvd2xpbmdfR2FtZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic2tpbGxzXCI6IFtcIkphdmFTY3JpcHRcIiwgXCJIdG1sXCIsIFwiQ1NTXCIsIFwiVEhSRUVqc1wiXVxuICAgIH0sXG4gICAge1xuICAgICAgICBcIl9pZFwiOiAzLFxuICAgICAgICBcIm5hbWVcIjogXCJFYXN5U2F2ZVwiLFxuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiRWFzeVNhdmUgZXN0IHVuZSBhcHBsaWNhdGlvbiBkZSBzYXV2ZWdhcmRlIHBvbHl2YWxlbnRlIGTDqXZlbG9wcMOpZSBlbiBDIyBhdmVjIGRlcyBpbnRlcmZhY2VzIGNvbnNvbGUgZXQgV1BGLiBJbCBwZXJtZXQgYXV4IHV0aWxpc2F0ZXVycyBkZSBjcsOpZXIgZXQgZCdleMOpY3V0ZXIgZGVzIHNhdXZlZ2FyZGVzLCBlbiBjb3BpYW50IGRlcyBmaWNoaWVycyBkJ3VuIHLDqXBlcnRvaXJlIHNvdXJjZSB2ZXJzIHVuIHLDqXBlcnRvaXJlIGNpYmxlLiBMJ2FwcGxpY2F0aW9uIGEgw6l2b2x1w6kgw6AgdHJhdmVycyBkaWZmw6lyZW50ZXMgdmVyc2lvbnMsIGNoYWN1bmUgaW50cm9kdWlzYW50IGRlIG5vdXZlbGxlcyBmb25jdGlvbm5hbGl0w6lzIGV0IGFtw6lsaW9yYXRpb25zLlwiLFxuICAgICAgICBcImltYWdlXCI6IFwiRWFzeVNhdmUucG5nXCIsXG4gICAgICAgIFwibGlua3NcIjoge1xuICAgICAgICAgICAgXCJnaXRodWJcIjogXCJodHRwczovL2dpdGh1Yi5jb20vQXJrY296L0Vhc3lTYXZlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJza2lsbHNcIjogW1wiQyNcIiwgXCJXUEZcIiwsIFwiLk5ldENvcmVcIl1cbiAgICB9LFxuICAgIHtcbiAgICAgICAgXCJfaWRcIjogNCxcbiAgICAgICAgXCJuYW1lXCI6IFwiUG9ydGZvbGlvXCIsXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJDZSBwcm9qZXQgZXN0IGxlIHBvcnRmb2xpbyBxdWUgdm91cyDDqnRlcyBlbiB0cmFpbiBkZSBjb25zdWx0ZXIuIElsIGEgcG91ciBidXQgZGUgbWUgcHLDqXNlbnRlciBtb2kgYWluc2kgcXVlIG1vbiBwYXJjb3VycyBwcm9mZXNzaW9ubmVsLiBD4oCZw6l0YWl0IMOpZ2FsZW1lbnQgbOKAmW9jY2FzaW9uIHBvdXIgbW9pIGTigJlhcHByZW5kcmUgZGUgbm91dmVsbGVzIHRlY2hub2xvZ2llcyBjb21tZSBOZXh0SlMgb3UgZW5jb3JlIEZyYW1lciBtb3Rpb24uIFwiLFxuICAgICAgICBcImltYWdlXCI6IFwicG9ydGZvbGlvLnBuZ1wiLFxuICAgICAgICBcImxpbmtzXCI6IHtcbiAgICAgICAgICAgIFwiZ2l0aHViXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1JvbGFuZEFmYW52aS9Qb3J0Zm9saW9cIixcbiAgICAgICAgICAgIFwid2Vic2l0ZVwiOiBcImh0dHBzOi8vcG9ydGZvbGlvLThqaDE4OWRrZS1yb2xhbmRhZmFudmlzLXByb2plY3RzLnZlcmNlbC5hcHAvXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJza2lsbHNcIjogW1wiTmV4dEpTXCIsIFwiVGFpbHdpbmRjc3NcIiwgXCJGcmFtZXIgTW90aW9uXCIsIFwiRG9ja2VyXCJdXG4gICAgfVxuXVxuIl0sIm5hbWVzIjpbInByb2plY3RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./data/Projects.js\n"));

/***/ })

});